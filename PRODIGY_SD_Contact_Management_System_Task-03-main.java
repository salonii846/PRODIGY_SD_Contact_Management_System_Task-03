import java.io.*;import java.util.*;public class ContactManager {    private static final String FILE_NAME = "contacts.txt";    public static void main(String[] args) {        Scanner scanner = new Scanner(System.in);        Map<String, Contact> contacts = loadContacts();        while (true) {            System.out.println("\nContact Manager");            System.out.println("1. Add Contact");            System.out.println("2. View Contacts");            System.out.println("3. Edit Contact");            System.out.println("4. Delete Contact");            System.out.println("5. Exit");            System.out.print("Choose an option: ");            int choice = scanner.nextInt();            scanner.nextLine(); // Consume newline            switch (choice) {                case 1:                    addContact(scanner, contacts);                    break;                case 2:                    viewContacts(contacts);                    break;                case 3:                    editContact(scanner, contacts);                    break;                case 4:                    deleteContact(scanner, contacts);                    break;                case 5:                    saveContacts(contacts);                    System.out.println("Exiting program. Goodbye!");                    return;                default:                    System.out.println("Invalid option. Please try again.");            }        }    }    private static void addContact(Scanner scanner, Map<String, Contact> contacts) {        System.out.print("Enter name: ");        String name = scanner.nextLine();        if (contacts.containsKey(name)) {            System.out.println("Contact with this name already exists.");            return;        }        System.out.print("Enter phone number: ");        String phoneNumber = scanner.nextLine();        System.out.print("Enter email address: ");        String email = scanner.nextLine();        contacts.put(name, new Contact(name, phoneNumber, email));        System.out.println("Contact added successfully.");    }    private static void viewContacts(Map<String, Contact> contacts) {        if (contacts.isEmpty()) {            System.out.println("No contacts available.");            return;        }        System.out.println("\nContact List:");        for (Contact contact : contacts.values()) {            System.out.println(contact);        }    }    private static void editContact(Scanner scanner, Map<String, Contact> contacts) {        System.out.print("Enter the name of the contact to edit: ");        String name = scanner.nextLine();        if (!contacts.containsKey(name)) {            System.out.println("Contact not found.");            return;        }        Contact contact = contacts.get(name);        System.out.println("Editing Contact: " + contact);        System.out.print("Enter new phone number (leave blank to keep current): ");        String phoneNumber = scanner.nextLine();        if (!phoneNumber.isEmpty()) {            contact.setPhoneNumber(phoneNumber);        }        System.out.print("Enter new email address (leave blank to keep current): ");        String email = scanner.nextLine();        if (!email.isEmpty()) {            contact.setEmail(email);        }        System.out.println("Contact updated successfully.");    }    private static void deleteContact(Scanner scanner, Map<String, Contact> contacts) {        System.out.print("Enter the name of the contact to delete: ");        String name = scanner.nextLine();        if (contacts.remove(name) != null) {            System.out.println("Contact deleted successfully.");        } else {            System.out.println("Contact not found.");        }    }    private static Map<String, Contact> loadContacts() {        Map<String, Contact> contacts = new HashMap<>();        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME))) {            String line;            while ((line = reader.readLine()) != null) {                String[] parts = line.split(",");                if (parts.length == 3) {                    contacts.put(parts[0], new Contact(parts[0], parts[1], parts[2]));                }            }        } catch (IOException e) {            System.out.println("No existing contacts found. Starting fresh.");        }        return contacts;    }    private static void saveContacts(Map<String, Contact> contacts) {        try (BufferedWriter writer = new BufferedWriter(new FileWriter(FILE_NAME))) {            for (Contact contact : contacts.values()) {                writer.write(contact.toCSV());                writer.newLine();            }        } catch (IOException e) {            System.out.println("Error saving contacts: " + e.getMessage());        }    }    static class Contact {        private String name;        private String phoneNumber;        private String email;        public Contact(String name, String phoneNumber, String email) {            this.name = name;            this.phoneNumber = phoneNumber;            this.email = email;        }        public String getName() {            return name;        }        public String getPhoneNumber() {            return phoneNumber;        }        public void setPhoneNumber(String phoneNumber) {            this.phoneNumber = phoneNumber;        }        public String getEmail() {            return email;        }        public void setEmail(String email) {            this.email = email;        }        @Override        public String toString() {            return "Name: " + name + ", Phone: " + phoneNumber + ", Email: " + email;        }        public String toCSV() {            return name + "," + phoneNumber + "," + email;        }    }}